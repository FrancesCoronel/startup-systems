Organization=function(t,o){this.name=t,this.repos=o},Organization.prototype.totalForks=function(){return total=0,this.repos.forEach(function(t){total+=t.forks}),total},Organization.prototype.totalWatchers=function(){return total=0,this.repos.forEach(function(t){total+=t.watchers}),total},Organization.prototype.forkedCount=function(){return total=0,this.repos.forEach(function(t){t.fork&&(total+=1)}),total},Organization.prototype.notForkedCount=function(){return total=0,this.repos.forEach(function(t){t.fork||(total+=1)}),total},Organization.prototype.featuredRepos=function(){return featured=[],this.repos.forEach(function(t){t.featured()&&!t.fork&&(t.position()?featured[t.position()-1]=t:featured.push(t))}),featured},Organization.prototype.deprecatedRepos=function(){return deprecated=[],this.repos.forEach(function(t){t.deprecated()&&!t.fork&&deprecated.push(t)}),deprecated},Organization.prototype.forkedRepos=function(){return forked=[],this.repos.forEach(function(t){t.fork&&forked.push(t)}),forked},Organization.prototype.regularRepos=function(){return regular=[],this.repos.forEach(function(t){t.fork||t.featured()||t.deprecated()||regular.push(t)}),regular},Organization.prototype.addReposToContainer=function(t,o){o.forEach(function(o,r){t.append(o.getContainer(r+1))})};